#subsequent rows (data):      201     1    2   1     1    1    2  ...   2
#NOTE: This syntax is NOT designed to catch missing values or print errors if values other
#than 1 or 2 are present. Please be careful that all data is complete and formatted as above.
# load MCQ data (make sure to update all file paths accordingly)
setwd("/Users/bryanxwu/Desktop/bryanxwu/Documents/Extra_Curricular/Research/Poldrack Lab/Practice/R-Practice-/Kirby/MCQ_Syntax")
MCQdata <- read.table("Sample_MCQ_data.txt", header = TRUE)
# load lookup tables
lookup1 <- read.table("lookup1MCQ.txt", header = TRUE)
lookup2 <- read.table("lookup2MCQ.txt", header = TRUE)
lookup3 <- read.table("lookup3MCQ.txt", header = TRUE)
#Calculate unique value for each sequence of responses
MCQdata$MCQ13 <- MCQdata$MCQ13*1
MCQdata$MCQ20 <- MCQdata$MCQ20*2
MCQdata$MCQ26 <- MCQdata$MCQ26*4
MCQdata$MCQ22 <- MCQdata$MCQ22*8
MCQdata$MCQ3 <- MCQdata$MCQ3*16
MCQdata$MCQ18 <- MCQdata$MCQ18*32
MCQdata$MCQ5 <- MCQdata$MCQ5*64
MCQdata$MCQ7 <- MCQdata$MCQ7*128
MCQdata$MCQ11 <- MCQdata$MCQ11*256
MCQdata$SmlSeq <- with (MCQdata, MCQ13+MCQ20+MCQ26+MCQ22+MCQ3+MCQ18+MCQ5+MCQ7+MCQ11-510)
MCQdata$MCQ1 <- MCQdata$MCQ1*1
MCQdata$MCQ6 <- MCQdata$MCQ6*2
MCQdata$MCQ24 <- MCQdata$MCQ24*4
MCQdata$MCQ16 <- MCQdata$MCQ16*8
MCQdata$MCQ10 <- MCQdata$MCQ10*16
MCQdata$MCQ21 <- MCQdata$MCQ21*32
MCQdata$MCQ14 <- MCQdata$MCQ14*64
MCQdata$MCQ8 <- MCQdata$MCQ8*128
MCQdata$MCQ27 <- MCQdata$MCQ27*256
MCQdata$MedSeq <- with (MCQdata, MCQ1+MCQ6+MCQ24+MCQ16+MCQ10+MCQ21+MCQ14+MCQ8+MCQ27-510)
MCQdata$MCQ9 <- MCQdata$MCQ9*1
MCQdata$MCQ17 <- MCQdata$MCQ17*2
MCQdata$MCQ12 <- MCQdata$MCQ12*4
MCQdata$MCQ15 <- MCQdata$MCQ15*8
MCQdata$MCQ2 <- MCQdata$MCQ2*16
MCQdata$MCQ25 <- MCQdata$MCQ25*32
MCQdata$MCQ23 <- MCQdata$MCQ23*64
MCQdata$MCQ19 <- MCQdata$MCQ19*128
MCQdata$MCQ4 <- MCQdata$MCQ4*256
MCQdata$LrgSeq <- with (MCQdata, MCQ9+MCQ17+MCQ12+MCQ15+MCQ2+MCQ25+MCQ23+MCQ19+MCQ4-510)
#Remove unwanted columns
MCQdata[2:28] <- list(NULL)
#Maintain row order
MCQdata$id <- 1:nrow(MCQdata)
#Merge in MCQindices from lookup table
MCQdata <- (merge(lookup1, MCQdata, by = 'SmlSeq'))
MCQdata <- (merge(lookup2, MCQdata, by = 'MedSeq'))
MCQdata <- (merge(lookup3, MCQdata, by = 'LrgSeq'))
#Return to the original order of rows
MCQdata <- MCQdata[order(MCQdata$id),]
head(MCQdata)
#Arrange columns in ideal order
MCQdata <- MCQdata[c(13,9,10,11,12,5,6,7,8,1,2,3,4)]
#Save MCQ indices to a text file
write.table(MCQdata, file="MCQindices.txt", row.names=FALSE)
check2<-read.table("/Users/bryanxwu/Desktop/bryanxwu/Documents/Extra_Curricular/Research/Poldrack Lab/Practice/R-Practice-/Kirby/MCQ_Syntax/MCQindices.txt", header=TRUE)
View(check2)
View(kirby5)
8 13 16 19 21 23 27 29
# load lookup tables
lookup1 <- read.table("/Users/bryanxwu/Desktop/bryanxwu/Documents/Extra_Curricular/Research/Poldrack Lab/Practice/R-Practice-/Kirby/MCQ_Syntax/lookup1MCQ.txt", header = TRUE)
lookup2 <- read.table("/Users/bryanxwu/Desktop/bryanxwu/Documents/Extra_Curricular/Research/Poldrack Lab/Practice/R-Practice-/Kirby/MCQ_Syntax/lookup2MCQ.txt", header = TRUE)
lookup3 <- read.table("/Users/bryanxwu/Desktop/bryanxwu/Documents/Extra_Curricular/Research/Poldrack Lab/Practice/R-Practice-/Kirby/MCQ_Syntax/lookup3MCQ.txt", header = TRUE)
#Calculate unique value for each sequence of responses
# 7 9 11 15 17 22 24 26 30
kirby5$key_press.7 <- kirby5$key_press.7*1
kirby5$key_press.9 <- kirby5$key_press.9*2
kirby5$key_press.11 <- kirby5$key_press.11*4
kirby5$key_press.15 <- kirby5$key_press.15*8
kirby5$key_press.17 <- kirby5$key_press.17*16
kirby5$key_press.22 <- kirby5$key_press.22*32
kirby5$key_press.24 <- kirby5$key_press.24*64
kirby5$key_press.26 <- kirby5$key_press.26*128
kirby5$key_press.30 <- kirby5$key_press.30*256
kirby5$SmlSeq <- with (kirby5+key_press.7+ key_press.9+key_press.11+key_press.15+key_press.17+ key_press.22+key_press.24+key_press.26+key_press.30-510)
# 5 10 12 14 18 20 25 28 31
kirby5$key_press.5 <- kirby5$key_press.5*1
kirby5$key_press.10 <- kirby5$key_press.10*2
kirby5$key_press.12 <- kirby5$key_press.12*4
kirby5$key_press.14 <- kirby5$key_press.14*8
kirby5$key_press.18 <- kirby5$key_press.18*16
kirby5$key_press.20 <- kirby5$key_press.20*32
kirby5$key_press.25 <- kirby5$key_press.25*64
kirby5$key_press.28 <- kirby5$key_press.28*128
kirby5$key_press.31 <- kirby5$key_press.31*256
kirby5$MedSeq <- with (kirby5+key_press.5+ key_press.10+key_press.12+key_press.14+key_press.18+ key_press.20+key_press.25+key_press.28+key_press.31-510)
# 6 8 13 16 19 21 23 27 29
kirby5$key_press.6 <- kirby5$key_press.6*1
kirby5$key_press.8 <- kirby5$key_press.8*2
kirby5$key_press.13 <- kirby5$key_press.13*4
kirby5$key_press.16 <- kirby5$key_press.16*8
kirby5$key_press.19 <- kirby5$key_press.19*16
kirby5$key_press.21 <- kirby5$key_press.21*32
kirby5$key_press.23 <- kirby5$key_press.23*64
kirby5$key_press.27 <- kirby5$key_press.27*128
kirby5$key_press.29 <- kirby5$key_press.29*256
kirby5$LrgSeq <- with (kirby5+key_press.6+ key_press.8+key_press.13+key_press.16+key_press.19+ key_press.21+key_press.23+key_press.27+key_press.29-510)
#Remove unwanted columns
kirby5[2:28] <- list(NULL)
#Maintain row order
kirby5$id <- 1:nrow(kirby5)
#Merge in MCQindices from lookup table
kirby5 <- (merge(lookup1, kirby5, by = 'SmlSeq'))
kirby5 <- (merge(lookup2, kirby5, by = 'MedSeq'))
kirby5 <- (merge(lookup3, kirby5, by = 'LrgSeq'))
#Return to the original order of rows
kirby5 <- kirby5[order(kirby5$id),]
head(kirby5)
#Arrange columns in ideal order
kirby5 <- kirby5[c(13,9,10,11,12,5,6,7,8,1,2,3,4)]
#Save MCQ indices to a text file
write.table(kirby5, file="/Users/bryanxwu/Desktop/bryanxwu/Documents/Extra_Curricular/Research/Poldrack Lab/Practice/R-Practice-/Kirby/MCQ_Syntax/MCQindices.txt", row.names=FALSE)
attempt.4kirby5<-read.table("/Users/bryanxwu/Desktop/bryanxwu/Documents/Extra_Curricular/Research/Poldrack Lab/Practice/R-Practice-/Kirby/MCQ_Syntax/MCQindices.txt", header=TRUE)
View(attempt4kirby5)
attempt4kirby5<-read.table("/Users/bryanxwu/Desktop/bryanxwu/Documents/Extra_Curricular/Research/Poldrack Lab/Practice/R-Practice-/Kirby/MCQ_Syntax/MCQindices.txt", header=TRUE)
View(attempt4kirby5)
#NOTE: MCQ data should be in the following format (1 = immediate choice; 2 = delayed choice):
#first row (headers):       SubjID  MCQ1 MCQ2 MCQ3 MCQ4 MCQ5 MCQ6 ... MCQ27
#subsequent rows (data):      201     1    2   1     1    1    2  ...   2
#NOTE: This syntax is NOT designed to catch missing values or print errors if values other
#than 1 or 2 are present. Please be careful that all data is complete and formatted as above.
# load MCQ data (make sure to update all file paths accordingly)
setwd("/Users/bryanxwu/Desktop/bryanxwu/Documents/Extra_Curricular/Research/Poldrack Lab/Practice/R-Practice-/Kirby/MCQ_Syntax")
MCQdata <- read.table("Sample_MCQ_data.txt", header = TRUE)
# load lookup tables
lookup1 <- read.table("lookup1MCQ.txt", header = TRUE)
lookup2 <- read.table("lookup2MCQ.txt", header = TRUE)
lookup3 <- read.table("lookup3MCQ.txt", header = TRUE)
#Calculate unique value for each sequence of responses
MCQdata$MCQ13 <- MCQdata$MCQ13*1
MCQdata$MCQ20 <- MCQdata$MCQ20*2
MCQdata$MCQ26 <- MCQdata$MCQ26*4
MCQdata$MCQ22 <- MCQdata$MCQ22*8
MCQdata$MCQ3 <- MCQdata$MCQ3*16
MCQdata$MCQ18 <- MCQdata$MCQ18*32
MCQdata$MCQ5 <- MCQdata$MCQ5*64
MCQdata$MCQ7 <- MCQdata$MCQ7*128
MCQdata$MCQ11 <- MCQdata$MCQ11*256
MCQdata$SmlSeq <- with (MCQdata, MCQ13+MCQ20+MCQ26+MCQ22+MCQ3+MCQ18+MCQ5+MCQ7+MCQ11-510)
MCQdata$MCQ1 <- MCQdata$MCQ1*1
MCQdata$MCQ6 <- MCQdata$MCQ6*2
MCQdata$MCQ24 <- MCQdata$MCQ24*4
MCQdata$MCQ16 <- MCQdata$MCQ16*8
MCQdata$MCQ10 <- MCQdata$MCQ10*16
MCQdata$MCQ21 <- MCQdata$MCQ21*32
MCQdata$MCQ14 <- MCQdata$MCQ14*64
MCQdata$MCQ8 <- MCQdata$MCQ8*128
MCQdata$MCQ27 <- MCQdata$MCQ27*256
MCQdata$MedSeq <- with (MCQdata, MCQ1+MCQ6+MCQ24+MCQ16+MCQ10+MCQ21+MCQ14+MCQ8+MCQ27-510)
MCQdata$MCQ9 <- MCQdata$MCQ9*1
MCQdata$MCQ17 <- MCQdata$MCQ17*2
MCQdata$MCQ12 <- MCQdata$MCQ12*4
MCQdata$MCQ15 <- MCQdata$MCQ15*8
MCQdata$MCQ2 <- MCQdata$MCQ2*16
MCQdata$MCQ25 <- MCQdata$MCQ25*32
MCQdata$MCQ23 <- MCQdata$MCQ23*64
MCQdata$MCQ19 <- MCQdata$MCQ19*128
MCQdata$MCQ4 <- MCQdata$MCQ4*256
MCQdata$LrgSeq <- with (MCQdata, MCQ9+MCQ17+MCQ12+MCQ15+MCQ2+MCQ25+MCQ23+MCQ19+MCQ4-510)
#Remove unwanted columns
MCQdata[2:28] <- list(NULL)
#Maintain row order
MCQdata$id <- 1:nrow(MCQdata)
#Merge in MCQindices from lookup table
MCQdata <- (merge(lookup1, MCQdata, by = 'SmlSeq'))
MCQdata <- (merge(lookup2, MCQdata, by = 'MedSeq'))
MCQdata <- (merge(lookup3, MCQdata, by = 'LrgSeq'))
#Return to the original order of rows
MCQdata <- MCQdata[order(MCQdata$id),]
head(MCQdata)
#Arrange columns in ideal order
MCQdata <- MCQdata[c(13,9,10,11,12,5,6,7,8,1,2,3,4)]
View(MCQdata)
#NOTE: MCQ data should be in the following format (1 = immediate choice; 2 = delayed choice):
#first row (headers):       SubjID  MCQ1 MCQ2 MCQ3 MCQ4 MCQ5 MCQ6 ... MCQ27
#subsequent rows (data):      201     1    2   1     1    1    2  ...   2
#NOTE: This syntax is NOT designed to catch missing values or print errors if values other
#than 1 or 2 are present. Please be careful that all data is complete and formatted as above.
# load MCQ data (make sure to update all file paths accordingly)
setwd("/Users/bryanxwu/Desktop/bryanxwu/Documents/Extra_Curricular/Research/Poldrack Lab/Practice/R-Practice-/Kirby/MCQ_Syntax")
MCQdata <- read.table("Sample_MCQ_data.txt", header = TRUE)
# load lookup tables
lookup1 <- read.table("lookup1MCQ.txt", header = TRUE)
lookup2 <- read.table("lookup2MCQ.txt", header = TRUE)
lookup3 <- read.table("lookup3MCQ.txt", header = TRUE)
#Calculate unique value for each sequence of responses
MCQdata$MCQ13 <- MCQdata$MCQ13*1
MCQdata$MCQ20 <- MCQdata$MCQ20*2
MCQdata$MCQ26 <- MCQdata$MCQ26*4
MCQdata$MCQ22 <- MCQdata$MCQ22*8
MCQdata$MCQ3 <- MCQdata$MCQ3*16
MCQdata$MCQ18 <- MCQdata$MCQ18*32
MCQdata$MCQ5 <- MCQdata$MCQ5*64
MCQdata$MCQ7 <- MCQdata$MCQ7*128
MCQdata$MCQ11 <- MCQdata$MCQ11*256
MCQdata$SmlSeq <- with (MCQdata, MCQ13+MCQ20+MCQ26+MCQ22+MCQ3+MCQ18+MCQ5+MCQ7+MCQ11-510)
MCQdata$MCQ1 <- MCQdata$MCQ1*1
MCQdata$MCQ6 <- MCQdata$MCQ6*2
MCQdata$MCQ24 <- MCQdata$MCQ24*4
MCQdata$MCQ16 <- MCQdata$MCQ16*8
MCQdata$MCQ10 <- MCQdata$MCQ10*16
MCQdata$MCQ21 <- MCQdata$MCQ21*32
MCQdata$MCQ14 <- MCQdata$MCQ14*64
MCQdata$MCQ8 <- MCQdata$MCQ8*128
MCQdata$MCQ27 <- MCQdata$MCQ27*256
MCQdata$MedSeq <- with (MCQdata, MCQ1+MCQ6+MCQ24+MCQ16+MCQ10+MCQ21+MCQ14+MCQ8+MCQ27-510)
MCQdata$MCQ9 <- MCQdata$MCQ9*1
MCQdata$MCQ17 <- MCQdata$MCQ17*2
MCQdata$MCQ12 <- MCQdata$MCQ12*4
MCQdata$MCQ15 <- MCQdata$MCQ15*8
MCQdata$MCQ2 <- MCQdata$MCQ2*16
MCQdata$MCQ25 <- MCQdata$MCQ25*32
MCQdata$MCQ23 <- MCQdata$MCQ23*64
MCQdata$MCQ19 <- MCQdata$MCQ19*128
MCQdata$MCQ4 <- MCQdata$MCQ4*256
MCQdata$LrgSeq <- with (MCQdata, MCQ9+MCQ17+MCQ12+MCQ15+MCQ2+MCQ25+MCQ23+MCQ19+MCQ4-510)
View(MCQdata)
kirby5<-reshape(kirby4, idvar="id", timevar=c("trial"), direction="wide")
View(kirby5)
#NOTE: MCQ data should be in the following format (1 = immediate choice; 2 = delayed choice):
#first row (headers):       SubjID  MCQ1 MCQ2 MCQ3 MCQ4 MCQ5 MCQ6 ... MCQ27
#subsequent rows (data):      201     1    2   1     1    1    2  ...   2
#NOTE: This syntax is NOT designed to catch missing values or print errors if values other
#than 1 or 2 are present. Please be careful that all data is complete and formatted as above.
# load MCQ data (make sure to update all file paths accordingly)
setwd("/Users/bryanxwu/Desktop/bryanxwu/Documents/Extra_Curricular/Research/Poldrack Lab/Practice/R-Practice-/Kirby/MCQ_Syntax")
MCQdata <- read.table("Sample_MCQ_data.txt", header = TRUE)
# load lookup tables
lookup1 <- read.table("lookup1MCQ.txt", header = TRUE)
lookup2 <- read.table("lookup2MCQ.txt", header = TRUE)
lookup3 <- read.table("lookup3MCQ.txt", header = TRUE)
#Calculate unique value for each sequence of responses
MCQdata$MCQ13 <- MCQdata$MCQ13*1
MCQdata$MCQ20 <- MCQdata$MCQ20*2
MCQdata$MCQ26 <- MCQdata$MCQ26*4
MCQdata$MCQ22 <- MCQdata$MCQ22*8
MCQdata$MCQ3 <- MCQdata$MCQ3*16
MCQdata$MCQ18 <- MCQdata$MCQ18*32
MCQdata$MCQ5 <- MCQdata$MCQ5*64
MCQdata$MCQ7 <- MCQdata$MCQ7*128
MCQdata$MCQ11 <- MCQdata$MCQ11*256
MCQdata$SmlSeq <- with (MCQdata, MCQ13+MCQ20+MCQ26+MCQ22+MCQ3+MCQ18+MCQ5+MCQ7+MCQ11-510)
MCQdata$MCQ1 <- MCQdata$MCQ1*1
MCQdata$MCQ6 <- MCQdata$MCQ6*2
MCQdata$MCQ24 <- MCQdata$MCQ24*4
MCQdata$MCQ16 <- MCQdata$MCQ16*8
MCQdata$MCQ10 <- MCQdata$MCQ10*16
MCQdata$MCQ21 <- MCQdata$MCQ21*32
MCQdata$MCQ14 <- MCQdata$MCQ14*64
MCQdata$MCQ8 <- MCQdata$MCQ8*128
MCQdata$MCQ27 <- MCQdata$MCQ27*256
MCQdata$MedSeq <- with (MCQdata, MCQ1+MCQ6+MCQ24+MCQ16+MCQ10+MCQ21+MCQ14+MCQ8+MCQ27-510)
MCQdata$MCQ9 <- MCQdata$MCQ9*1
MCQdata$MCQ17 <- MCQdata$MCQ17*2
MCQdata$MCQ12 <- MCQdata$MCQ12*4
MCQdata$MCQ15 <- MCQdata$MCQ15*8
MCQdata$MCQ2 <- MCQdata$MCQ2*16
MCQdata$MCQ25 <- MCQdata$MCQ25*32
MCQdata$MCQ23 <- MCQdata$MCQ23*64
MCQdata$MCQ19 <- MCQdata$MCQ19*128
MCQdata$MCQ4 <- MCQdata$MCQ4*256
MCQdata$LrgSeq <- with (MCQdata, MCQ9+MCQ17+MCQ12+MCQ15+MCQ2+MCQ25+MCQ23+MCQ19+MCQ4-510)
View(MCQdata)
# 7 9 11 15 17 22 24 26 30
kirby5$key_press.7 <- kirby5$key_press.7*1
kirby5$key_press.9 <- kirby5$key_press.9*2
kirby5$key_press.11 <- kirby5$key_press.11*4
kirby5$key_press.15 <- kirby5$key_press.15*8
kirby5$key_press.17 <- kirby5$key_press.17*16
kirby5$key_press.22 <- kirby5$key_press.22*32
kirby5$key_press.24 <- kirby5$key_press.24*64
kirby5$key_press.26 <- kirby5$key_press.26*128
kirby5$key_press.30 <- kirby5$key_press.30*256
kirby5$SmlSeq <- with (kirby5+key_press.7+ key_press.9+key_press.11+key_press.15+key_press.17+ key_press.22+key_press.24+key_press.26+key_press.30-510)
# 5 10 12 14 18 20 25 28 31
kirby5$key_press.5 <- kirby5$key_press.5*1
kirby5$key_press.10 <- kirby5$key_press.10*2
kirby5$key_press.12 <- kirby5$key_press.12*4
kirby5$key_press.14 <- kirby5$key_press.14*8
kirby5$key_press.18 <- kirby5$key_press.18*16
kirby5$key_press.20 <- kirby5$key_press.20*32
kirby5$key_press.25 <- kirby5$key_press.25*64
kirby5$key_press.28 <- kirby5$key_press.28*128
kirby5$key_press.31 <- kirby5$key_press.31*256
kirby5$MedSeq <- with (kirby5+key_press.5+ key_press.10+key_press.12+key_press.14+key_press.18+ key_press.20+key_press.25+key_press.28+key_press.31-510)
# 6 8 13 16 19 21 23 27 29
kirby5$key_press.6 <- kirby5$key_press.6*1
kirby5$key_press.8 <- kirby5$key_press.8*2
kirby5$key_press.13 <- kirby5$key_press.13*4
kirby5$key_press.16 <- kirby5$key_press.16*8
kirby5$key_press.19 <- kirby5$key_press.19*16
kirby5$key_press.21 <- kirby5$key_press.21*32
kirby5$key_press.23 <- kirby5$key_press.23*64
kirby5$key_press.27 <- kirby5$key_press.27*128
kirby5$key_press.29 <- kirby5$key_press.29*256
kirby5$LrgSeq <- with (kirby5+key_press.6+ key_press.8+key_press.13+key_press.16+key_press.19+ key_press.21+key_press.23+key_press.27+key_press.29-510)
# 7 9 11 15 17 22 24 26 30
kirby5$key_press.7 <- kirby5$key_press.7*1
kirby5$key_press.9 <- kirby5$key_press.9*2
kirby5$key_press.11 <- kirby5$key_press.11*4
kirby5$key_press.15 <- kirby5$key_press.15*8
kirby5$key_press.17 <- kirby5$key_press.17*16
kirby5$key_press.22 <- kirby5$key_press.22*32
kirby5$key_press.24 <- kirby5$key_press.24*64
kirby5$key_press.26 <- kirby5$key_press.26*128
kirby5$key_press.30 <- kirby5$key_press.30*256
kirby5$SmlSeq <- with (kirby5+key_press.7+ key_press.9+key_press.11+key_press.15+key_press.17+ key_press.22+key_press.24+key_press.26+key_press.30-510)
# 5 10 12 14 18 20 25 28 31
kirby5$key_press.5 <- kirby5$key_press.5*1
kirby5$key_press.10 <- kirby5$key_press.10*2
kirby5$key_press.12 <- kirby5$key_press.12*4
kirby5$key_press.14 <- kirby5$key_press.14*8
kirby5$key_press.18 <- kirby5$key_press.18*16
kirby5$key_press.20 <- kirby5$key_press.20*32
kirby5$key_press.25 <- kirby5$key_press.25*64
kirby5$key_press.28 <- kirby5$key_press.28*128
kirby5$key_press.31 <- kirby5$key_press.31*256
kirby5$MedSeq <- with (kirby5+key_press.5+ key_press.10+key_press.12+key_press.14+key_press.18+ key_press.20+key_press.25+key_press.28+key_press.31-510)
# 6 8 13 16 19 21 23 27 29
kirby5$key_press.6 <- kirby5$key_press.6*1
kirby5$key_press.8 <- kirby5$key_press.8*2
kirby5$key_press.13 <- kirby5$key_press.13*4
kirby5$key_press.16 <- kirby5$key_press.16*8
kirby5$key_press.19 <- kirby5$key_press.19*16
kirby5$key_press.21 <- kirby5$key_press.21*32
kirby5$key_press.23 <- kirby5$key_press.23*64
kirby5$key_press.27 <- kirby5$key_press.27*128
kirby5$key_press.29 <- kirby5$key_press.29*256
kirby5$LrgSeq <- with (kirby5+key_press.6+ key_press.8+key_press.13+key_press.16+key_press.19+ key_press.21+key_press.23+key_press.27+key_press.29-510)
---
title: "Kirby Repliction4"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyr)
library(reshape2)
kirby<-read.csv("/Users/bryanxwu/Desktop/bryanxwu/Documents/Extra_Curricular/Research/Poldrack Lab/Practice/R-Practice-/Kirby/kirby.csv")
```
## Data Setup
Here, I'll setup the data and make sure it's produced in a way that is consistent with the paper. This is attempt number four, using what I interpreted as the parameter estimation method:
Following the Wiley paper's syntax.
#### Creating Rewards
```{r}
# extract IDs
kirby<-separate(kirby,X, c("Kirby", "idtrial"), sep="kirby_")
kirby<-kirby[,-1]
kirby<-separate(kirby,idtrial, c("id", "trial"), sep="_")
kirby2<-kirby
# there are 36 participants, and 27 trials per
# create reward groups
kirby2$reward[kirby2$large_amt>=75 & kirby2$large_amt<=85]<-3
kirby2$reward[kirby2$large_amt>=50 & kirby2$large_amt<=60]<-2
kirby2$reward[kirby2$large_amt>=25 & kirby2$large_amt<=35]<-1
kirby2$reward[is.na(kirby2$large_amt)==TRUE]<-NA
# check frequencies
library(dplyr)
kirby2 %>%
filter(!is.na(reward)) %>%
group_by(reward) %>%
summarise(freq=n())
```
#### Coding discount rate
```{r}
kirby2$kvalue[(kirby2$small_amt==34 & kirby2$large_amt==35)|(kirby2$small_amt==54 & kirby2$large_amt==55)|(kirby2$small_amt==78&kirby2$large_amt==80)]<-0.00016
kirby2$kvalue[(kirby2$small_amt==28 & kirby2$large_amt==30)|(kirby2$small_amt==47 & kirby2$large_amt==50)|(kirby2$small_amt==80 & kirby2$large_amt==85)]<-0.00040
kirby2$kvalue[(kirby2$small_amt==22 & kirby2$large_amt==25)|(kirby2$small_amt==54 & kirby2$large_amt==60)|(kirby2$small_amt==67 &kirby2$large_amt==75)]<-0.0010
kirby2$kvalue[(kirby2$small_amt==25 & kirby2$large_amt==30)|(kirby2$small_amt==49 & kirby2$large_amt==60)|(kirby2$small_amt==69&kirby2$large_amt==85)]<-0.0025
kirby2$kvalue[(kirby2$small_amt==19 & kirby2$large_amt==25)|(kirby2$small_amt==40& kirby2$large_amt==55)|(kirby2$small_amt==55&kirby2$large_amt==75)]<-0.0060
kirby2$kvalue[(kirby2$small_amt==24 & kirby2$large_amt==35)|(kirby2$small_amt==34 & kirby2$large_amt==50)|(kirby2$small_amt==54&kirby2$large_amt==80)]<-0.016
kirby2$kvalue[(kirby2$small_amt==14 & kirby2$large_amt==25)|(kirby2$small_amt==27 & kirby2$large_amt==50)|(kirby2$small_amt==41&kirby2$large_amt==75)]<-0.041
kirby2$kvalue[(kirby2$small_amt==15 & kirby2$large_amt==35)|(kirby2$small_amt==25 & kirby2$large_amt==60)|(kirby2$small_amt==33&kirby2$large_amt==80)]<-0.10
kirby2$kvalue[(kirby2$small_amt==11 & kirby2$large_amt==30)|(kirby2$small_amt==20 & kirby2$large_amt==55)|(kirby2$small_amt==31&kirby2$large_amt==85)]<-0.25
kirby3<-kirby2 %>%
filter(!is.na(reward))
kirby3<-kirby3[,-c(3:12, 16:18, 20:27)]
length<-nrow(kirby3)
for (i in 1:length){
if (kirby3$key_press[i]==80)
kirby3$key_press[i]<-2
else kirby3$key_press[i]<-1
}
# smaller, sooner is 1 and larger, later is 2
kirby4<-kirby3[,-c(4:8)]
```
#### Estimating Parameters
``` {r}
# reshape
kirby5<-reshape(kirby4, idvar="id", timevar=c("trial"), direction="wide")
# identify reward sizes
small<-unique(kirby3$trial[kirby3$reward==1])
# 7 9 11 15 17 22 24 26 30
medium<-unique(kirby3$trial[kirby3$reward==2])
# 5 10 12 14 18 20 25 28 31
large<-unique(kirby3$trial[kirby3$reward==3])
# 6 8 13 16 19 21 23 27 29
# load lookup tables
lookup1 <- read.table("/Users/bryanxwu/Desktop/bryanxwu/Documents/Extra_Curricular/Research/Poldrack Lab/Practice/R-Practice-/Kirby/MCQ_Syntax/lookup1MCQ.txt", header = TRUE)
lookup2 <- read.table("/Users/bryanxwu/Desktop/bryanxwu/Documents/Extra_Curricular/Research/Poldrack Lab/Practice/R-Practice-/Kirby/MCQ_Syntax/lookup2MCQ.txt", header = TRUE)
lookup3 <- read.table("/Users/bryanxwu/Desktop/bryanxwu/Documents/Extra_Curricular/Research/Poldrack Lab/Practice/R-Practice-/Kirby/MCQ_Syntax/lookup3MCQ.txt", header = TRUE)
#Calculate unique value for each sequence of responses
# 7 9 11 15 17 22 24 26 30
kirby5$key_press.7 <- kirby5$key_press.7*1
kirby5$key_press.9 <- kirby5$key_press.9*2
kirby5$key_press.11 <- kirby5$key_press.11*4
kirby5$key_press.15 <- kirby5$key_press.15*8
kirby5$key_press.17 <- kirby5$key_press.17*16
kirby5$key_press.22 <- kirby5$key_press.22*32
kirby5$key_press.24 <- kirby5$key_press.24*64
kirby5$key_press.26 <- kirby5$key_press.26*128
kirby5$key_press.30 <- kirby5$key_press.30*256
kirby5$SmlSeq <- with (kirby5, key_press.7+ key_press.9+key_press.11+key_press.15+key_press.17+ key_press.22+key_press.24+key_press.26+key_press.30-510)
# 5 10 12 14 18 20 25 28 31
kirby5$key_press.5 <- kirby5$key_press.5*1
kirby5$key_press.10 <- kirby5$key_press.10*2
kirby5$key_press.12 <- kirby5$key_press.12*4
kirby5$key_press.14 <- kirby5$key_press.14*8
kirby5$key_press.18 <- kirby5$key_press.18*16
kirby5$key_press.20 <- kirby5$key_press.20*32
kirby5$key_press.25 <- kirby5$key_press.25*64
kirby5$key_press.28 <- kirby5$key_press.28*128
kirby5$key_press.31 <- kirby5$key_press.31*256
kirby5$MedSeq <- with (kirby5, key_press.5+ key_press.10+key_press.12+key_press.14+key_press.18+ key_press.20+key_press.25+key_press.28+key_press.31-510)
# 6 8 13 16 19 21 23 27 29
kirby5$key_press.6 <- kirby5$key_press.6*1
kirby5$key_press.8 <- kirby5$key_press.8*2
kirby5$key_press.13 <- kirby5$key_press.13*4
kirby5$key_press.16 <- kirby5$key_press.16*8
kirby5$key_press.19 <- kirby5$key_press.19*16
kirby5$key_press.21 <- kirby5$key_press.21*32
kirby5$key_press.23 <- kirby5$key_press.23*64
kirby5$key_press.27 <- kirby5$key_press.27*128
kirby5$key_press.29 <- kirby5$key_press.29*256
kirby5$LrgSeq <- with (kirby5, key_press.6+ key_press.8+key_press.13+key_press.16+key_press.19+ key_press.21+key_press.23+key_press.27+key_press.29-510)
#Remove unwanted columns
kirby5[2:28] <- list(NULL)
#Maintain row order
kirby5$id <- 1:nrow(kirby5)
#Merge in MCQindices from lookup table
kirby5 <- (merge(lookup1, kirby5, by = 'SmlSeq'))
kirby5 <- (merge(lookup2, kirby5, by = 'MedSeq'))
kirby5 <- (merge(lookup3, kirby5, by = 'LrgSeq'))
#Return to the original order of rows
kirby5 <- kirby5[order(kirby5$id),]
head(kirby5)
#Arrange columns in ideal order
kirby5 <- kirby5[c(13,9,10,11,12,5,6,7,8,1,2,3,4)]
#Save MCQ indices to a text file
write.table(kirby5, file="/Users/bryanxwu/Desktop/bryanxwu/Documents/Extra_Curricular/Research/Poldrack Lab/Practice/R-Practice-/Kirby/MCQ_Syntax/MCQindices.txt", row.names=FALSE)
attempt4kirby5<-read.table("/Users/bryanxwu/Desktop/bryanxwu/Documents/Extra_Curricular/Research/Poldrack Lab/Practice/R-Practice-/Kirby/MCQ_Syntax/MCQindices.txt", header=TRUE)
View(attempt4kirby5)
#NOTE: MCQ data should be in the following format (1 = immediate choice; 2 = delayed choice):
#first row (headers):       SubjID  MCQ1 MCQ2 MCQ3 MCQ4 MCQ5 MCQ6 ... MCQ27
#subsequent rows (data):      201     1    2   1     1    1    2  ...   2
#NOTE: This syntax is NOT designed to catch missing values or print errors if values other
#than 1 or 2 are present. Please be careful that all data is complete and formatted as above.
# load MCQ data (make sure to update all file paths accordingly)
setwd("/Users/bryanxwu/Desktop/bryanxwu/Documents/Extra_Curricular/Research/Poldrack Lab/Practice/R-Practice-/Kirby/MCQ_Syntax")
MCQdata <- read.table("Sample_MCQ_data.txt", header = TRUE)
# load lookup tables
lookup1 <- read.table("lookup1MCQ.txt", header = TRUE)
lookup2 <- read.table("lookup2MCQ.txt", header = TRUE)
lookup3 <- read.table("lookup3MCQ.txt", header = TRUE)
#Calculate unique value for each sequence of responses
MCQdata$MCQ13 <- MCQdata$MCQ13*1
MCQdata$MCQ20 <- MCQdata$MCQ20*2
MCQdata$MCQ26 <- MCQdata$MCQ26*4
MCQdata$MCQ22 <- MCQdata$MCQ22*8
MCQdata$MCQ3 <- MCQdata$MCQ3*16
MCQdata$MCQ18 <- MCQdata$MCQ18*32
MCQdata$MCQ5 <- MCQdata$MCQ5*64
MCQdata$MCQ7 <- MCQdata$MCQ7*128
MCQdata$MCQ11 <- MCQdata$MCQ11*256
MCQdata$SmlSeq <- with (MCQdata, MCQ13+MCQ20+MCQ26+MCQ22+MCQ3+MCQ18+MCQ5+MCQ7+MCQ11-510)
MCQdata$MCQ1 <- MCQdata$MCQ1*1
MCQdata$MCQ6 <- MCQdata$MCQ6*2
MCQdata$MCQ24 <- MCQdata$MCQ24*4
MCQdata$MCQ16 <- MCQdata$MCQ16*8
MCQdata$MCQ10 <- MCQdata$MCQ10*16
MCQdata$MCQ21 <- MCQdata$MCQ21*32
MCQdata$MCQ14 <- MCQdata$MCQ14*64
MCQdata$MCQ8 <- MCQdata$MCQ8*128
MCQdata$MCQ27 <- MCQdata$MCQ27*256
MCQdata$MedSeq <- with (MCQdata, MCQ1+MCQ6+MCQ24+MCQ16+MCQ10+MCQ21+MCQ14+MCQ8+MCQ27-510)
MCQdata$MCQ9 <- MCQdata$MCQ9*1
MCQdata$MCQ17 <- MCQdata$MCQ17*2
MCQdata$MCQ12 <- MCQdata$MCQ12*4
MCQdata$MCQ15 <- MCQdata$MCQ15*8
MCQdata$MCQ2 <- MCQdata$MCQ2*16
MCQdata$MCQ25 <- MCQdata$MCQ25*32
MCQdata$MCQ23 <- MCQdata$MCQ23*64
MCQdata$MCQ19 <- MCQdata$MCQ19*128
MCQdata$MCQ4 <- MCQdata$MCQ4*256
MCQdata$LrgSeq <- with (MCQdata, MCQ9+MCQ17+MCQ12+MCQ15+MCQ2+MCQ25+MCQ23+MCQ19+MCQ4-510)
#Remove unwanted columns
MCQdata[2:28] <- list(NULL)
#Maintain row order
MCQdata$id <- 1:nrow(MCQdata)
#Merge in MCQindices from lookup table
MCQdata <- (merge(lookup1, MCQdata, by = 'SmlSeq'))
MCQdata <- (merge(lookup2, MCQdata, by = 'MedSeq'))
MCQdata <- (merge(lookup3, MCQdata, by = 'LrgSeq'))
#Return to the original order of rows
MCQdata <- MCQdata[order(MCQdata$id),]
head(MCQdata)
#Arrange columns in ideal order
MCQdata <- MCQdata[c(13,9,10,11,12,5,6,7,8,1,2,3,4)]
#Save MCQ indices to a text file
write.table(MCQdata, file="MCQindices.txt", row.names=FALSE)
check2<-read.table("/Users/bryanxwu/Desktop/bryanxwu/Documents/Extra_Curricular/Research/Poldrack Lab/Practice/R-Practice-/Kirby/MCQ_Syntax/MCQindices.txt", header=TRUE)
